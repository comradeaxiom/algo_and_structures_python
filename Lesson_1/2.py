# 2. Выполнить логические побитовые операции "И", "ИЛИ" и др.
# над числами 5 и 6. Выполнить
# над числом 5 побитовый сдвиг вправо и влево на два знака.


NUMB_1 = 5
NUMB_2 = 6

'''"ИЛИ" оператор копирует бит, если тот присутствует в хотя бы в одном
операнде.'''
BIT_OR = NUMB_1 | NUMB_2

'''"Исключительное ИЛИ" оператор копирует бит только если бит присутствует
в одном из операндов, но не в обоих сразу.'''
BIT_XOR = NUMB_1 ^ NUMB_2

'''"И" оператор, копирует бит в результат только если бит присутствует
в обоих операндах.'''
BIT_AND = NUMB_1 & NUMB_2

'''Побитовое отрицание меняет биты на обратные, там где была единица
становиться ноль и наоборот.'''
BIT_NOT_NUMB_1 = ~NUMB_1
BIT_NOT_NUMB_2 = ~NUMB_2

'''Побитовый сдвиг вправо. Значение левого операнда "сдвигается" вправо
на количество бит указанных в правом операнде.'''
BIT_SHIFT_RIGHT = NUMB_1 >> 2

'''Побитовый сдвиг влево. Значение левого операнда "сдвигается" влево
на количество бит указанных в правом операнде.'''
BIT_SHIFT_LEFT = NUMB_1 << 2

print(f"""Побитовое «ИЛИ» (OR) для {bin(NUMB_1)} и {bin(NUMB_2)}: \
{bin(BIT_OR)} ({BIT_OR})""")

print(f"""Исключающее «ИЛИ» (XOR) для {bin(NUMB_1)} и {bin(NUMB_2)}: \
{bin(BIT_XOR)} ({BIT_XOR})""")

print(f"""Побитовое «И» (AND) для {bin(NUMB_1)} и {bin(NUMB_2)}: \
{bin(BIT_AND)} ({BIT_AND})""")

print(f"""Побитовое отрицание (NOT) для {bin(NUMB_1)}: \
{bin(BIT_NOT_NUMB_1)} ({BIT_NOT_NUMB_1}) и для {bin(NUMB_2)}: \
{bin(BIT_NOT_NUMB_2)} ({BIT_NOT_NUMB_2})""")

print(f"""Битовый сдвиг вправо для {bin(NUMB_1)}: \
{bin(BIT_SHIFT_RIGHT)} ({BIT_SHIFT_RIGHT})""")

print(f"""Битовый сдвиг влево для {bin(NUMB_1)}: \
{bin(BIT_SHIFT_LEFT)} ({BIT_SHIFT_LEFT})""")